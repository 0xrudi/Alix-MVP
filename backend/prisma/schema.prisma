generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  wallets   Wallet[]
  artifacts Artifact[]
  catalogs  ArtifactCatalog[]
}

model Wallet {
  id            String   @id @default(uuid())
  address       String   @unique
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  isPrimary     Boolean  @default(false)
  ensNames      EnsName[]
  delegationsAsDelegator Delegation[] @relation("delegator")
  delegationsAsDelegate  Delegation[] @relation("delegate")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model EnsName {
  id        String   @id @default(uuid())
  name      String   @unique
  walletId  String
  wallet    Wallet   @relation(fields: [walletId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Delegation {
  id                String   @id @default(uuid())
  delegatorWalletId String
  delegatorWallet   Wallet   @relation("delegator", fields: [delegatorWalletId], references: [id])
  delegateWalletId  String
  delegateWallet    Wallet   @relation("delegate", fields: [delegateWalletId], references: [id])
  type              String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Artifact {
  id               String   @id @default(uuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id])
  tokenId          String
  contractAddress  String
  network          String
  metadata         Json?
  catalogAssignments ArtifactCatalogAssignment[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([contractAddress, tokenId, network])
}

model ArtifactCatalog {
  id        String   @id @default(uuid())
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  artifacts ArtifactCatalogAssignment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ArtifactCatalogAssignment {
  id        String   @id @default(uuid())
  artifactId String
  artifact  Artifact @relation(fields: [artifactId], references: [id])
  catalogId String
  catalog   ArtifactCatalog @relation(fields: [catalogId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([artifactId, catalogId])
}